generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ------------------- Models -------------------

// ##### Users #####

enum UserRoles {
  admin
  member
}

model User {
  id String @id @default(uuid())
  name String 
  email String @unique
  password String 

  role UserRoles @default(member)

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  teamMember TeamMember[]
  tasks Tasks[]

  @@map("users")
}

// ##### Teams #####

model Team {
  id String @id @default(uuid())
  name String
  description String

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  teamMember TeamMember[]
  tasks Tasks[]

  @@map("teams")
}

// ##### Team Members #####

model TeamMember {
  id String @id @default(uuid())
  userId String @map("user_id")
  teamId String @map("team_id")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  user User @relation(fields: [userId], references: [id])
  team Team @relation(fields: [teamId], references: [id])

  @@unique([userId,teamId])

  @@map("team_members")
}

// ##### Tasks #####

enum TasksStatus {
  pending
  in_progress
  completed
}

enum TasksPriority {
  high
  medium
  low
}

model Tasks {
  id String @id @default(uuid())
  title String
  description String

  status TasksStatus @default(pending)
  priority TasksPriority @default(low)

  assigned_to String 
  team_id String @map("team_id")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  assigned_to_user User @relation(fields: [assigned_to],references: [id])
  team Team @relation(fields: [team_id],references: [id])

  @@map("tasks")
}
